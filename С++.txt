#include <iostream>    // Подключаем библиотеку
using namespace std;

int main() 
{
    string s = "AaBbCcDd";  // Создаем исходную строку
    string upper; // Создаем пустую строку для заглавных букв 
    string lower; // Создаем пустую строку для строчных букв

    for (int i = 0; i < s.size(); i++) // Проходимся циклом по всем символам строки
       {
        if (i % 2 == 0)  // Если индекс четный (0, 2, 4...), то добавляем символ к строке заглавных букв
           {upper += s[i];} 
        else             // Если индекс нечетный (1, 3, 5...), то добавляем символ к строке строчных букв
           {lower += s[i];}
       }

    cout << "Заглавные: " << upper << endl;   // Выводим заглавные буквы
    cout << "Строчные: " << lower << endl;    // Выводим строчные буквы

    return 0;
}






#include <iostream>   // Подключаем библиотеку
#include <vector>     // Подключаем библиотеку для работы с векторами
using namespace std;

int main() 
{
    vector<string> li = {"a", "1", "b", "2", "c", "3"};   // Создаем вектор со значениями
    vector<string> li_1;   // Создаем пустой вектор для хранения букв
    vector<string> li_2;   // Создаем пустой вектор для хранения чисел
    
    // Разделяем список на буквы и числа
    for (int i = 0; i < li.size(); i++)   // Проходимся циклом по всем элементам вектора li
    {
        if (i % 2 == 0)  // Если индекс четный (0, 2, 4...), то добавляем символ в вектор букв
          {li_1.push_back(li[i]);} 
        else             // Если индекс нечетный (1, 3, 5...), то добавляем символ в вектор чисел
          {li_2.push_back(li[i]);}
    }
    
    li.clear();    // Очищаем исходный список
    
    // Выводим полученные списки
    cout << "Буквы: ";
    for (const auto& item : li_1)  // Цикл по всем элементам вектора li_1
        {cout << item << " ";}     // Выводим каждый элемент с пробелом
    cout << endl << endl;
    
    cout << "Числа: ";
    for (const auto& item : li_2)  // Цикл по всем элементам вектора li_2
        {cout << item << " ";}     // Выводим каждый элемент с пробелом
    cout << endl;
    
    return 0;
}


